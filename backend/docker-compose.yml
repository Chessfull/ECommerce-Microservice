services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 4000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network

  elasticsearch:
    image: bitnami/elasticsearch:latest
    environment:
      - ELASTICSEARCH_PASSWORD=elastictestnewmindai
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/bitnami/elasticsearch/data
    networks:
      - app_network  # Connected to the same network as kafka and zookeeper
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s"]
      interval: 30s
      retries: 3

  # nodejs-app:
  #   image: node:20
  #   container_name: nodejs-app
  #   working_dir: /usr/src/app
  #   volumes:
  #     - ./nodejs-app:/usr/src/app
  #   command: "npm start"
  #   environment:
  #     - ELASTICSEARCH_URL=http://elasticsearch:9200
  #     - ELASTIC_USERNAME=elastic
  #     - ELASTIC_PASSWORD=elastictestnewmindai
  #     - KAFKA_BROKER=kafka:29092
  #   depends_on:
  #     - elasticsearch
  #     - kafka
  #   networks:
  #     - app_network
  #   ports:
  #     - "3000:3000"

volumes:
  elasticsearch_data:

networks:
  app_network:
    driver: bridge
